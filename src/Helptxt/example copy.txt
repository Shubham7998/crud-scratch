import React, { useState } from 'react';

interface SearchCriteria {
    propertyTitle: string;
    typeId: string;
    description: string;
    address: string;
    priceMin: string;
    priceMax: string;
    sizeMin: string;
    bedroomsMin: string;
    statusId: string;
}

const AdvanceSearch: React.FC = () => {
    // Data provided
    const data: SearchCriteria[] = [
        {
            propertyTitle: "qwerqwe",
            typeId: "House",
            description: "sds",
            address: "dsd",
            priceMin: "23",
            priceMax: "23",
            sizeMin: "1",
            bedroomsMin: "1",
            statusId: "1"
        },
        {
            propertyTitle: "qwerqwe",
            typeId: "House",
            description: "sds",
            address: "dsd2134567",
            priceMin: "12",
            priceMax: "1",
            sizeMin: "1",
            bedroomsMin: "1",
            statusId: "1"
        }
    ];

    // Initial values for search criteria based on the first data entry
    const initialSearchCriteria: SearchCriteria = data.length > 0 ? data[0] : {
        propertyTitle: '',
        typeId: '',
        description: '',
        address: '',
        priceMin: '',
        priceMax: '',
        sizeMin: '',
        bedroomsMin: '',
        statusId: ''
    };

    // State to store search criteria
    const [searchCriteria, setSearchCriteria] = useState<SearchCriteria>(initialSearchCriteria);

    // Property types
    const propertyTypes: string[] = ['House', 'Apartment', 'Condo'];
    // Status types
    const statusTypes: string[] = ['Available', 'Sold', 'Future'];

    // Function to handle changes in input fields
    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
        const { name, value } = e.target;
        setSearchCriteria({ ...searchCriteria, [name]: value });
    };

    // Function to handle form submission
    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
        e.preventDefault();
        // Perform search with searchCriteria data
        console.log(searchCriteria);
    };

    return (
        <div>
            <h2>Advanced Search</h2>
            <form onSubmit={handleSubmit}>
                <div>
                    <label>Property Title:</label>
                    <input type="text" name="propertyTitle" value={searchCriteria.propertyTitle} onChange={handleChange} />
                </div>
                <div>
                    <label>Type:</label>
                    <select name="typeId" value={searchCriteria.typeId} onChange={handleChange}>
                        <option value="">Select Type</option>
                        {propertyTypes.map((type, index) => (
                            <option key={index} value={type}>{type}</option>
                        ))}
                    </select>
                </div>
                <div>
                    <label>Description:</label>
                    <input type="text" name="description" value={searchCriteria.description} onChange={handleChange} />
                </div>
                <div>
                    <label>Address:</label>
                    <input type="text" name="address" value={searchCriteria.address} onChange={handleChange} />
                </div>
                <div>
                    <label>Price:</label>
                    <input type="number" name="priceMin" placeholder="Min" value={searchCriteria.priceMin} onChange={handleChange} />
                    <input type="number" name="priceMax" placeholder="Max" value={searchCriteria.priceMax} onChange={handleChange} />
                </div>
                <div>
                    <label>Size:</label>
                    <input type="number" name="sizeMin" placeholder="Min" value={searchCriteria.sizeMin} onChange={handleChange} />
                </div>
                <div>
                    <label>Bedrooms:</label>
                    <input type="number" name="bedroomsMin" value={searchCriteria.bedroomsMin} onChange={handleChange} />
                </div>
                <div>
                    <label>Status:</label>
                    <select name="statusId" value={searchCriteria.statusId} onChange={handleChange}>
                        <option value="">Select Status</option>
                        {statusTypes.map((status, index) => (
                            <option key={index} value={status}>{status}</option>
                        ))}
                    </select>
                </div>
                <button type="submit">Search</button>
            </form>
        </div>
    );
};

export default AdvanceSearch;
